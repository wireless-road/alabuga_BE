"""initial

Revision ID: 677d52728f8f
Revises: 
Create Date: 2022-04-02 17:31:44.492102

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '202204021731'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('CREATE EXTENSION IF NOT EXISTS pg_trgm')
    op.create_table('sb_celery_history',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('task_name', sa.String(length=40), nullable=False),
    sa.Column('task_timestamp', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sb_celery_history'))
    )
    op.create_table('sb_users',
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('email_verified', sa.Boolean(), nullable=True),
    sa.Column('profile_image_url', sa.String(length=256), nullable=True),
    sa.Column('profile_image_key', sa.String(length=128), nullable=True),
    sa.Column('phone', sa.String(length=24), nullable=True),
    sa.Column('last_login_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('failed_login_attempt_counter', sa.Integer(), nullable=True),
    sa.Column('failed_login_attempt_counter_date', sa.DateTime(), nullable=True),
    sa.Column('reset_password_counter', sa.Integer(), nullable=True),
    sa.Column('reset_password_counter_date', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sa.BigInteger(), nullable=False),
    sa.Column('updated_by_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['sb_users.id'], name=op.f('fk_sb_users_created_by_id_sb_users')),
    sa.ForeignKeyConstraint(['updated_by_id'], ['sb_users.id'], name=op.f('fk_sb_users_updated_by_id_sb_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sb_users'))
    )
    op.create_index(op.f('ix_sb_users_email'), 'sb_users', ['email'], unique=False)
    op.create_table('sb_accounting_accounts',
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('account_code', sa.String(length=12), nullable=False),
    sa.Column('description_eng', sa.String(length=256), nullable=True),
    sa.Column('country', sa.String(length=2), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('category_code_1', sa.String(length=25), nullable=True),
    sa.Column('category_code_2', sa.String(length=25), nullable=True),
    sa.Column('category_code_3', sa.String(length=25), nullable=True),
    sa.Column('description_nob', sa.String(length=256), nullable=True),
    sa.Column('category_description_1_eng', sa.String(length=256), nullable=True),
    sa.Column('category_description_2_eng', sa.String(length=256), nullable=True),
    sa.Column('category_description_3_eng', sa.String(length=256), nullable=True),
    sa.Column('category_description_1_nob', sa.String(length=256), nullable=True),
    sa.Column('category_description_2_nob', sa.String(length=256), nullable=True),
    sa.Column('category_description_3_nob', sa.String(length=256), nullable=True),
    sa.Column('created_by_id', sa.BigInteger(), nullable=False),
    sa.Column('updated_by_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['sb_users.id'], name=op.f('fk_sb_accounting_accounts_created_by_id_sb_users')),
    sa.ForeignKeyConstraint(['updated_by_id'], ['sb_users.id'], name=op.f('fk_sb_accounting_accounts_updated_by_id_sb_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sb_accounting_accounts'))
    )
    op.create_table('sb_calendar',
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by_id', sa.BigInteger(), nullable=False),
    sa.Column('updated_by_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['sb_users.id'], name=op.f('fk_sb_calendar_created_by_id_sb_users')),
    sa.ForeignKeyConstraint(['updated_by_id'], ['sb_users.id'], name=op.f('fk_sb_calendar_updated_by_id_sb_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sb_calendar'))
    )
    op.create_table('sb_organizations',
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=100), nullable=True),
    sa.Column('address', sa.String(length=500), nullable=True),
    sa.Column('address2', sa.String(length=500), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('province', sa.String(length=100), nullable=True),
    sa.Column('country', sa.String(length=2), nullable=True),
    sa.Column('postal', sa.String(length=100), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('logo', sa.String(length=255), nullable=True),
    sa.Column('organization_number', sa.String(length=12), nullable=True),
    sa.Column('vat_liable', sa.Boolean(), nullable=True),
    sa.Column('industrial_classification_local', sa.String(length=20), nullable=True),
    sa.Column('business_entity_type', sa.String(length=20), nullable=True),
    sa.Column('url', sa.String(length=1000), nullable=True),
    sa.Column('departments_amount', sa.BigInteger(), nullable=True),
    sa.Column('parent_organization_number', sa.String(length=20), nullable=True),
    sa.Column('number_of_employees', sa.Integer(), nullable=True),
    sa.Column('incorporation_date', sa.Date(), nullable=True),
    sa.Column('registration_date', sa.Date(), nullable=True),
    sa.Column('liquidation_date', sa.Date(), nullable=True),
    sa.Column('deletion_date', sa.Date(), nullable=True),
    sa.Column('created_by_id', sa.BigInteger(), nullable=False),
    sa.Column('updated_by_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['sb_users.id'], name=op.f('fk_sb_organizations_created_by_id_sb_users')),
    sa.ForeignKeyConstraint(['updated_by_id'], ['sb_users.id'], name=op.f('fk_sb_organizations_updated_by_id_sb_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sb_organizations'))
    )
    op.create_index('idx_organization_number', 'sb_organizations', ['organization_number'], unique=False, postgresql_using='btree')
    op.create_index('organization_name_gin_idx', 'sb_organizations', ['name'], unique=False, postgresql_using='gin', postgresql_ops={'name': 'gin_trgm_ops'})
    op.create_table('sb_roles',
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=2), nullable=False),
    sa.Column('created_by_id', sa.BigInteger(), nullable=False),
    sa.Column('updated_by_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['sb_users.id'], name=op.f('fk_sb_roles_created_by_id_sb_users')),
    sa.ForeignKeyConstraint(['updated_by_id'], ['sb_users.id'], name=op.f('fk_sb_roles_updated_by_id_sb_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sb_roles'))
    )
    op.create_table('sb_task_definitions',
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('unique_name', sa.String(length=50), nullable=True),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.Column('active_from', sa.Date(), nullable=True),
    sa.Column('active_to', sa.Date(), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('notification1_date', sa.DateTime(), nullable=True),
    sa.Column('notification2_date', sa.DateTime(), nullable=True),
    sa.Column('repeat_frequency', sa.Integer(), nullable=True),
    sa.Column('repeat_unit', sa.String(length=10), nullable=True),
    sa.Column('created_by_id', sa.BigInteger(), nullable=False),
    sa.Column('updated_by_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['sb_users.id'], name=op.f('fk_sb_task_definitions_created_by_id_sb_users')),
    sa.ForeignKeyConstraint(['updated_by_id'], ['sb_users.id'], name=op.f('fk_sb_task_definitions_updated_by_id_sb_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sb_task_definitions'))
    )
    op.create_table('sb_used_passwords',
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('created_by_id', sa.BigInteger(), nullable=False),
    sa.Column('updated_by_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['sb_users.id'], name=op.f('fk_sb_used_passwords_created_by_id_sb_users')),
    sa.ForeignKeyConstraint(['updated_by_id'], ['sb_users.id'], name=op.f('fk_sb_used_passwords_updated_by_id_sb_users')),
    sa.ForeignKeyConstraint(['user_id'], ['sb_users.id'], name=op.f('fk_sb_used_passwords_user_id_sb_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sb_used_passwords'))
    )
    op.create_table('sb_client_accounts',
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('unique_name', sa.String(length=50), nullable=False),
    sa.Column('display_name', sa.String(length=50), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('accounting_currency', sa.String(length=3), nullable=True),
    sa.Column('organization_id', sa.BigInteger(), nullable=True),
    sa.Column('upload_email', sa.String(length=50), nullable=True),
    sa.Column('sequence_number', sa.BigInteger(), nullable=True),
    sa.Column('recon_seq_num', sa.BigInteger(), nullable=True),
    sa.Column('organization_number', sa.String(length=12), nullable=True),
    sa.Column('sale_invoice_seq_number', sa.BigInteger(), nullable=True),
    sa.Column('sale_credit_notes_seq_number', sa.BigInteger(), nullable=True),
    sa.Column('purchase_invoice_seq_number', sa.BigInteger(), nullable=True),
    sa.Column('purchase_credit_notes_seq_number', sa.BigInteger(), nullable=True),
    sa.Column('receipt_seq_number', sa.BigInteger(), nullable=True),
    sa.Column('payment_seq_number', sa.BigInteger(), nullable=True),
    sa.Column('accountant_notes', sa.String(length=100), nullable=True),
    sa.Column('created_by_id', sa.BigInteger(), nullable=False),
    sa.Column('updated_by_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['sb_users.id'], name=op.f('fk_sb_client_accounts_created_by_id_sb_users')),
    sa.ForeignKeyConstraint(['organization_id'], ['sb_organizations.id'], name=op.f('fk_sb_client_accounts_organization_id_sb_organizations')),
    sa.ForeignKeyConstraint(['updated_by_id'], ['sb_users.id'], name=op.f('fk_sb_client_accounts_updated_by_id_sb_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sb_client_accounts')),
    sa.UniqueConstraint('unique_name', name=op.f('uq_sb_client_accounts_unique_name'))
    )
    op.create_table('sb_client_account_users',
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('client_account_id', sa.BigInteger(), nullable=True),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('role_id', sa.BigInteger(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_by_id', sa.BigInteger(), nullable=False),
    sa.Column('updated_by_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['client_account_id'], ['sb_client_accounts.id'], name=op.f('fk_sb_client_account_users_client_account_id_sb_client_accounts')),
    sa.ForeignKeyConstraint(['created_by_id'], ['sb_users.id'], name=op.f('fk_sb_client_account_users_created_by_id_sb_users')),
    sa.ForeignKeyConstraint(['role_id'], ['sb_roles.id'], name=op.f('fk_sb_client_account_users_role_id_sb_roles')),
    sa.ForeignKeyConstraint(['updated_by_id'], ['sb_users.id'], name=op.f('fk_sb_client_account_users_updated_by_id_sb_users')),
    sa.ForeignKeyConstraint(['user_id'], ['sb_users.id'], name=op.f('fk_sb_client_account_users_user_id_sb_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sb_client_account_users'))
    )
    op.create_table('sb_contracts',
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('accounting_client_account_id', sa.BigInteger(), nullable=True),
    sa.Column('client_account_id', sa.BigInteger(), nullable=True),
    sa.Column('created_by_id', sa.BigInteger(), nullable=False),
    sa.Column('updated_by_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['accounting_client_account_id'], ['sb_client_accounts.id'], name=op.f('fk_sb_contracts_accounting_client_account_id_sb_client_accounts')),
    sa.ForeignKeyConstraint(['client_account_id'], ['sb_client_accounts.id'], name=op.f('fk_sb_contracts_client_account_id_sb_client_accounts')),
    sa.ForeignKeyConstraint(['created_by_id'], ['sb_users.id'], name=op.f('fk_sb_contracts_created_by_id_sb_users')),
    sa.ForeignKeyConstraint(['updated_by_id'], ['sb_users.id'], name=op.f('fk_sb_contracts_updated_by_id_sb_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sb_contracts'))
    )
    op.create_table('sb_task_notifications',
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.BigInteger(), nullable=False),
    sa.Column('client_account_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('task_due_date', sa.DateTime(), nullable=True),
    sa.Column('notification_number', sa.Integer(), nullable=True),
    sa.Column('notification_method', sa.String(length=20), nullable=True),
    sa.Column('notification_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by_id', sa.BigInteger(), nullable=False),
    sa.Column('updated_by_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['client_account_id'], ['sb_client_accounts.id'], name=op.f('fk_sb_task_notifications_client_account_id_sb_client_accounts')),
    sa.ForeignKeyConstraint(['created_by_id'], ['sb_users.id'], name=op.f('fk_sb_task_notifications_created_by_id_sb_users')),
    sa.ForeignKeyConstraint(['task_id'], ['sb_task_definitions.id'], name=op.f('fk_sb_task_notifications_task_id_sb_task_definitions')),
    sa.ForeignKeyConstraint(['updated_by_id'], ['sb_users.id'], name=op.f('fk_sb_task_notifications_updated_by_id_sb_users')),
    sa.ForeignKeyConstraint(['user_id'], ['sb_users.id'], name=op.f('fk_sb_task_notifications_user_id_sb_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sb_task_notifications'))
    )
    op.create_table('sb_task_results',
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.BigInteger(), nullable=False),
    sa.Column('client_account_id', sa.BigInteger(), nullable=False),
    sa.Column('task_due_date', sa.DateTime(), nullable=True),
    sa.Column('result_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('result_type', sa.String(length=20), nullable=True),
    sa.Column('result_id', sa.BigInteger(), nullable=True),
    sa.Column('created_by_id', sa.BigInteger(), nullable=False),
    sa.Column('updated_by_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['client_account_id'], ['sb_client_accounts.id'], name=op.f('fk_sb_task_results_client_account_id_sb_client_accounts')),
    sa.ForeignKeyConstraint(['created_by_id'], ['sb_users.id'], name=op.f('fk_sb_task_results_created_by_id_sb_users')),
    sa.ForeignKeyConstraint(['task_id'], ['sb_task_definitions.id'], name=op.f('fk_sb_task_results_task_id_sb_task_definitions')),
    sa.ForeignKeyConstraint(['updated_by_id'], ['sb_users.id'], name=op.f('fk_sb_task_results_updated_by_id_sb_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sb_task_results'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sb_task_results')
    op.drop_table('sb_task_notifications')
    op.drop_table('sb_contracts')
    op.drop_table('sb_client_account_users')
    op.drop_table('sb_client_accounts')
    op.drop_table('sb_used_passwords')
    op.drop_table('sb_task_definitions')
    op.drop_table('sb_roles')
    op.drop_index('organization_name_gin_idx', table_name='sb_organizations')
    op.drop_index('idx_organization_number', table_name='sb_organizations')
    op.drop_table('sb_organizations')
    op.drop_table('sb_calendar')
    op.drop_table('sb_accounting_accounts')
    op.drop_index(op.f('ix_sb_users_email'), table_name='sb_users')
    op.drop_table('sb_users')
    op.drop_table('sb_celery_history')
    # ### end Alembic commands ###
